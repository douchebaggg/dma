{"version":3,"file":"DocType-pCRzhSpJ.js","sources":["../../../../frontend/src/views/doctype/ListDoctype.vue","../../../../frontend/src/views/DocType.vue"],"sourcesContent":["<template>\n    <ion-page>\n        <ion-content :fullscreen=\"true\">\n          <div class=\"m-4\">\n          <ion-card class=\"mb-2 rounded-xl border-0 shadow-xs\">\n            <ion-accordion-group class=\" m-4\">\n              <ion-accordion class=\"rounded-xl\" value=\"first\">\n                <ion-item slot=\"header\" lines=\"none\">\n                  <ion-label>Basket Doctype</ion-label>\n                </ion-item>\n                <div class=\"ion-padding\" slot=\"content\" v-if=\"basketDisplay.length > 0\">\n                  <ul>\n                  <li class=\"ml-5\" v-for=\"doc in basketDisplay\" >{{ doc }}</li>\n                  </ul>\n                </div>\n                <div class=\"ion-padding\" slot=\"content\" v-else>\n                  <p class=\"ml-5\">No Document found</p>\n                </div>\n              </ion-accordion>\n              <ion-accordion class=\"rounded-xl\" value=\"second\">\n                <ion-item slot=\"header\" lines=\"none\">\n                  <ion-label>Pallet</ion-label>\n                </ion-item>\n                <div class=\"ion-padding \" slot=\"content\" v-if=\"palletDisplay.length > 0\">\n                  <ul>\n                  <li class=\"ml-5\" v-for=\"doc in palletDisplay\">\n                    <ion-checkbox label-placement=\"end\" justify=\"start\">{{ doc }} \n                    </ion-checkbox>\n                  </li>\n                  </ul>\n                </div>\n                <div class=\"ion-padding \" slot=\"content\" v-else>\n                  <p class=\"ml-5\">No Document found</p>\n                </div>\n              </ion-accordion>\n              <ion-select aria-label=\"Doctype\" v-model=\"selectedDoctype\" interface=\"popover\" placeholder=\"Select Basket Doctype\" fill=\"outline\"\n              @ionChange=\"closePopover\"\n              >\n                <ion-select-option v-for=\"doctype in basketDisplay\" :key=\"doctype\" :value=\"doctype\">\n                  {{ doctype }}\n                </ion-select-option>\n              </ion-select>\n            </ion-accordion-group>\n          </ion-card>\n          </div>\n           <!-- Dropdown for selecting Doctype -->\n           \n      </ion-content>\n    </ion-page>\n</template>\n<script setup lang=\"ts\">\nimport { IonPage, \n  IonContent, \n  IonAccordion, \n  IonAccordionGroup, \n  IonItem, \n  IonLabel, \n  IonCheckbox,\n  IonSelect,\n  IonSelectOption,\n  IonDatetime, IonDatetimeButton, IonCard\n} from '@ionic/vue';\nimport { ref, onMounted, watch } from 'vue'\nimport { frappeSDK } from '@/utils/frappeSDK';\nconst { db } = frappeSDK()\nconst basketDisplay = ref<any>([])\nconst palletDisplay = ref<any>([])\nconst doctypeOptions = ref(['Testing Doctype', 'Sales Order']);\nconst selectedDoctype = ref(basketDisplay.value[0]);\nconst date = ref()\nconst displayDoctype = async (doctype: string) => {\n  const getBasket = await db.getDocList('Testing Doctype',{\n  fields: ['name', 'creation'],\n\tlimit: 10, \n  //filters: [['name','=','BK202409-012']],\n\torderBy: { field: 'modified',order: 'desc',} \n  })\n  basketDisplay.value = getBasket.map(doc => doc.name)\n\n  //pallet\n  const getPallet = await db.getDocList('Sales Order',{\n    fields: ['name', 'creation'],\n    limit: 10, \n    orderBy: { field: 'modified',order: 'desc',} \n  })\n  palletDisplay.value = getPallet.map(doc => doc.name)\n}\nwatch(selectedDoctype, (newDoctype) => {\n  displayDoctype(newDoctype);\n  console.log(selectedDoctype.value);\n});\nonMounted(() => {\n  displayDoctype(selectedDoctype.value);\n})\n\nconst closePopover = () => {\n  document.querySelectorAll('ion-popover').forEach((popover) => popover.dismiss());\n};\n\n</script>\n<style scoped>\n  ion-item{\n    padding: 0;\n    border: none;\n    \n  }\n\n  ion-accordion {\n    margin: 10px auto;\n  }\n\n  ion-accordion.accordion-collapsing ion-item[slot='header'],\n  ion-accordion.accordion-collapsed ion-item[slot='header'] {\n    --background: var(--ion-color-light);\n    --color: var(--ion-color-light-contrast);\n  }\n\n  ion-accordion.accordion-expanding ion-item[slot='header'],\n  ion-accordion.accordion-expanded ion-item[slot='header'] {\n    --background: var(--ion-color-primary);\n    --color: var(--ion-color-primary-contrast);\n  }\n\n</style>","<template>\n\t<ion-page>\n\t\t<ion-header>\n\t\t\t<ion-toolbar>\n\t\t\t\t<ion-title class=\"ion-text-center\">รายการเอกสารทั้งหมด</ion-title>\n\t\t\t</ion-toolbar>\n\t\t</ion-header>\n\t\t<ion-content :fullscreen=\"true\">\n      <ion-refresher slot=\"fixed\" @ionRefresh=\"handleRefresh\">\n        <ion-refresher-content\n          pulling-text=\"Pull to refresh\"\n          refreshing-spinner=\"dots\"\n          refreshing-text=\"Refreshing...\"\n        >\n        </ion-refresher-content>\n      </ion-refresher>\n        <ListDoctype class=\"mt-32\" />\n\t\t</ion-content>\n\n\t</ion-page>\n</template>\n<script lang=\"ts\" setup>\nimport {\n\tIonPage,\n\tIonHeader,\n\tIonToolbar,\n\tIonTitle,\n\tIonContent,\n  IonList,\n  IonButton,\n  IonCard,\n  IonCardHeader,\n  modalController,\n  IonRefresher,\n  IonRefresherContent,\n  IonItem\n} from \"@ionic/vue\"\nimport { onMounted, ref } from \"vue\";\n//import { RouterLink } from \"vue-router\";\nimport DoctypeCreate from \"./doctype/DoctypeCreate.vue\";\nimport { urlPort  } from \"@/utils/checkIP\";\nimport ListDoctype from \"./doctype/ListDoctype.vue\";\nimport { App } from \"@capacitor/app\"\nimport { Browser } from \"@capacitor/browser\";\nimport { frappeSDK } from \"@/utils/frappeSDK\";\nonMounted(() => {\n  setTheme()\n\tgetDoctype()\n})\nconst displayDoc = ref(null)\nconst displayWorkOrder = ref(null)\nconst { db } = frappeSDK()\nconst message = ref('');\n\n\nconst getDoctype = async () => {\n  const allDoctype = await db.getDocList('Testing Doctype', { \n\tfields: ['name', 'creation'],\n\tlimit: 10, \n  //filters: [['name','=','BK202409-012']],\n\torderBy: { field: 'modified',order: 'desc',} \n});\n  let docNameWithProducts = null;\n  for (const doc of allDoctype) {\n    const docType = await db.getDoc('Testing Doctype', doc.name);\n    if (docType.items && docType.items.length > 0) {\n      docNameWithProducts = doc.name;\n      displayDoc.value = docType.items;\n      //console.log(docType,\"\\n Success\");\n    }\n    else {\n      docNameWithProducts = doc.name;\n      displayDoc.value = docType.idx;\n      //console.log(docType);\n      //console.log(displayDoc.value)\n    }\n    if(docType.item_code && docType.item_code.length > 0){\n      //console.log(docType.item_code)\n      displayWorkOrder.value = docType.item_code;\n      break;\n    } \n  }\n\n  if (!docNameWithProducts) {\n    console.log('No document found');\n  } else {\n    console.log('List all Docname',allDoctype, docNameWithProducts);\n  }\n};\nconst handleRefresh = async (event: CustomEvent) => {\n  try {\n    await getDoctype()\n    setTimeout(() => {\n      event.detail.complete();\n    }, 2000);\n  } catch (error) {\n    console.error(\"Error refreshing user data:\", error);\n  }\n}\n\nconst isDarkMode = ref(window.matchMedia('(prefers-color-scheme: dark)').matches)\n\tconst setTheme = () => {\n\t\tconst theme = localStorage.getItem(\"darkMode\")\n\t\tif(theme !== null) {\n\t\t\tisDarkMode.value = JSON.parse(theme)\n\t\t\tconsole.log(isDarkMode.value)\n\t\t\tdocument.documentElement.classList.toggle('ion-palette-dark', isDarkMode.value)\n\t\t} \n\t}\n</script>\n\n<style scoped>\n.newDoctype{\n  margin: auto;\n  display: block;\n\n}\nion-card{\n  height: 35vh;\n  overflow: auto;\n  scroll-behavior: smooth;\n}\n.sticky-header {\n  font-size: large;\n  position: sticky;\n  top: 0;\n  z-index: 100; \n  background-color: whitesmoke;\n}\n.work-order{\n  font-size: larger;\n}\n</style>"],"names":["db","frappeSDK","basketDisplay","ref","palletDisplay","selectedDoctype","displayDoctype","doctype","getBasket","doc","getPallet","watch","newDoctype","onMounted","closePopover","popover","setTheme","getDoctype","displayDoc","displayWorkOrder","allDoctype","docNameWithProducts","docType","handleRefresh","event","error","isDarkMode","theme"],"mappings":"gjBAgEM,KAAA,CAAE,GAAAA,CAAG,EAAIC,EAAU,EACnBC,EAAgBC,EAAS,EAAE,EAC3BC,EAAgBD,EAAS,EAAE,EACVA,EAAI,CAAC,kBAAmB,aAAa,CAAC,EAC7D,MAAME,EAAkBF,EAAID,EAAc,MAAM,CAAC,CAAC,EACrCC,EAAI,EACX,MAAAG,EAAiB,MAAOC,GAAoB,CAChD,MAAMC,EAAY,MAAMR,EAAG,WAAW,kBAAkB,CACxD,OAAQ,CAAC,OAAQ,UAAU,EAC5B,MAAO,GAEP,QAAS,CAAE,MAAO,WAAW,MAAO,MAAO,CAAA,CACzC,EACDE,EAAc,MAAQM,EAAU,IAAIC,GAAOA,EAAI,IAAI,EAGnD,MAAMC,EAAY,MAAMV,EAAG,WAAW,cAAc,CAClD,OAAQ,CAAC,OAAQ,UAAU,EAC3B,MAAO,GACP,QAAS,CAAE,MAAO,WAAW,MAAO,MAAO,CAAA,CAC5C,EACDI,EAAc,MAAQM,EAAU,IAAID,GAAOA,EAAI,IAAI,CACrD,EACME,EAAAN,EAAkBO,GAAe,CACrCN,EAAyB,EACjB,QAAA,IAAID,EAAgB,KAAK,CAAA,CAClC,EACDQ,EAAU,IAAM,CACdP,EAAeD,EAAgB,KAAK,CAAA,CACrC,EAED,MAAMS,EAAe,IAAM,CAChB,SAAA,iBAAiB,aAAa,EAAE,QAASC,GAAYA,EAAQ,SAAS,CACjF,o9CCpDAF,EAAU,IAAM,CACLG,EAAA,EACCC,EAAA,CAAA,CACX,EACK,MAAAC,EAAaf,EAAI,IAAI,EACrBgB,EAAmBhB,EAAI,IAAI,EAC3B,CAAE,GAAAH,CAAG,EAAIC,EAAU,EACTE,EAAI,EAAE,EAGtB,MAAMc,EAAa,SAAY,CAC7B,MAAMG,EAAa,MAAMpB,EAAG,WAAW,kBAAmB,CAC3D,OAAQ,CAAC,OAAQ,UAAU,EAC3B,MAAO,GAEP,QAAS,CAAE,MAAO,WAAW,MAAO,MAAO,CAAA,CAC3C,EACC,IAAIqB,EAAsB,KAC1B,UAAWZ,KAAOW,EAAY,CAC5B,MAAME,EAAU,MAAMtB,EAAG,OAAO,kBAAmBS,EAAI,IAAI,EAY3D,GAXIa,EAAQ,OAASA,EAAQ,MAAM,OAAS,GAC1CD,EAAsBZ,EAAI,KAC1BS,EAAW,MAAQI,EAAQ,QAI3BD,EAAsBZ,EAAI,KAC1BS,EAAW,MAAQI,EAAQ,KAI1BA,EAAQ,WAAaA,EAAQ,UAAU,OAAS,EAAE,CAEnDH,EAAiB,MAAQG,EAAQ,UACjC,KAAA,CACF,CAGGD,EAGK,QAAA,IAAI,mBAAmBD,EAAYC,CAAmB,EAF9D,QAAQ,IAAI,mBAAmB,CAInC,EACME,EAAgB,MAAOC,GAAuB,CAC9C,GAAA,CACF,MAAMP,EAAW,EACjB,WAAW,IAAM,CACfO,EAAM,OAAO,SAAS,GACrB,GAAI,QACAC,EAAO,CACN,QAAA,MAAM,8BAA+BA,CAAK,CAAA,CAEtD,EAEMC,EAAavB,EAAI,OAAO,WAAW,8BAA8B,EAAE,OAAO,EACzEa,EAAW,IAAM,CAChB,MAAAW,EAAQ,aAAa,QAAQ,UAAU,EAC1CA,IAAU,OACDD,EAAA,MAAQ,KAAK,MAAMC,CAAK,EAC3B,QAAA,IAAID,EAAW,KAAK,EAC5B,SAAS,gBAAgB,UAAU,OAAO,mBAAoBA,EAAW,KAAK,EAEhF"}